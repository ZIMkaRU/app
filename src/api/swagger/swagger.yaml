swagger: "2.0"
info:
  version: "1.0.0"
  title: App
host: localhost:3000
basePath: /api/v1
schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.


     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid user & password.


     The following syntax must be used in the 'Authorization' header :

         Bearer xxxxxx.yyyyyyy.zzzzzz

consumes:
  - application/json
produces:
  - application/json
paths:
  /users:
    x-swagger-router-controller: user.controller
    post:
      operationId: createUser
      description: Create User
      security:
        - Bearer: []
      x-security-scopes:
        - solantro
      parameters:
        - in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/PostUser'
      responses:
        '200':
          description: Success
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      operationId: getUsers
      description: Get Users
      security:
        - Bearer: []
      x-security-scopes:
        - solantro
        - utility
      parameters:
        - in: query
          name: offset
          required: false
          type: integer
          minimum: 0
        - in: query
          name: limit
          required: false
          type: integer
          minimum: 1
          maximum: 300
        - in: query
          name: sort
          required: false
          type: array
          uniqueItems: true
          minItems: 1
          maxItems: 3
          collectionFormat: csv
          items:
            type: string
            enum: [username, -username, role, -role, createdAt, -createdAt, updatedAt, -updatedAt, email, -email, firstName, -firstName, lastName, -lastName, idNanogrid, -idNanogrid]
          default:
            - username
        - in: query
          name: filter
          required: false
          type: array
          collectionFormat: csv
          uniqueItems: true
          items:
            type: string
            pattern: '^((idNanogrid)|(createdAt)|(createdAtGte)|(createdAtLte)|(role))[:].*'
      responses:
        '200':
          description: Success
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /users/{userId}:
    x-swagger-router-controller: user.controller
    get:
      operationId: getUser
      description: Get User
      security:
        - Bearer: []
      x-security-scopes:
        - solantro
        - utility
        - homeowner
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: Success
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      operationId: updateUser
      description: Update User
      security:
        - Bearer: []
      x-security-scopes:
        - solantro
        - utility
        - homeowner
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/PutUser'
      responses:
        '200':
          description: Success
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      operationId: deleteUser
      description: Delete User
      security:
        - Bearer: []
      x-security-scopes:
        - solantro
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: Success
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

definitions:
  UserUsername:
    type: string
    minLength: 3
    maxLength: 20
  UserPassword:
    type: string
    minLength: 6
    maxLength: 20
    format: password
  UserPasswordConfirmation:
    type: string
    minLength: 6
    maxLength: 20
    format: password
  UserRole:
    type: string
    enum:
      - solantro
      - utility
      - homeowner
  UserEmail:
    type: string
    format: email
    minLength: 5
    maxLength: 30
  UserFirstName:
    type: string
    minLength: 3
    maxLength: 30
  UserLastName:
    type: string
    minLength: 3
    maxLength: 30
  UserHomeownerCellNumber:
    type: string
    minLength: 3
    maxLength: 20
  UserHomeownerLandLine:
    type: string
    minLength: 3
    maxLength: 20
  IdNanogrid:
    type: integer
    minimum: 1
  PostUser:
    type: object
    required:
      - username
      - password
      - passwordConfirmation
      - role
      - email
      - firstName
      - lastName
    properties:
      username:
        $ref: '#/definitions/UserUsername'
      password:
        $ref: '#/definitions/UserPassword'
      passwordConfirmation:
        $ref: '#/definitions/UserPasswordConfirmation'
      role:
        $ref: '#/definitions/UserRole'
      email:
        $ref: '#/definitions/UserEmail'
      firstName:
        $ref: '#/definitions/UserFirstName'
      lastName:
        $ref: '#/definitions/UserLastName'
      homeownerCellNumber:
        $ref: '#/definitions/UserHomeownerCellNumber'
      homeownerLandLine:
        $ref: '#/definitions/UserHomeownerLandLine'
      idNanogrid:
        $ref: '#/definitions/IdNanogrid'
  PutUser:
    type: object
    properties:
      username:
        $ref: '#/definitions/UserUsername'
      password:
        $ref: '#/definitions/UserPassword'
      passwordConfirmation:
        $ref: '#/definitions/UserPasswordConfirmation'
      role:
        $ref: '#/definitions/UserRole'
      email:
        $ref: '#/definitions/UserEmail'
      firstName:
        $ref: '#/definitions/UserFirstName'
      lastName:
        $ref: '#/definitions/UserLastName'
      homeownerCellNumber:
        $ref: '#/definitions/UserHomeownerCellNumber'
      homeownerLandLine:
        $ref: '#/definitions/UserHomeownerLandLine'
      idNanogrid:
        $ref: '#/definitions/IdNanogrid'
  ErrorResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
      errors:
        type: array
        items:
          type: object
          required: [code, message, path]
          properties:
            code:
              type: string
            message:
              type: string
            path:
              type: array
              items:
                type: string
